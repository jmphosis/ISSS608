---
title: "Hands-on Exercise 4B"
date: "28 January 2024"
date-modified: "last-modified" #allows for updating to the latest date
format: html
execute: 
  echo: true #shows the code
  eval: true #shows the outcomes of the code
  warning: false #does not show the warnings
editor: visual
background-color: lightgrey;
font-family:  Palatino Linotype;
---

# 10 Visual Statistical Analysis

## 10.1 Overview and Learning Outcomes

This hands-on exercise is based on [Chapter 3](https://r4va.netlify.app/chap03) of the **R for Visual Analytics** book.

The learning outcome is to create interactive data visualisation using functions in the [**ggiraph**](https://davidgohel.github.io/ggiraph/) and [**plotlyr**](https://plotly.com/r/) package.

## 10.2 Getting Started

### 10.2.1 Installing and Loading Required Libraries

In this hands-on exercise, the following R packages are used:

-   [**tidyverse**](https://www.tidyverse.org/) (i.e. readr, tidyr, dplyr) for performing data science tasks such as importing, tidying, and wrangling data;

-   [**patchwork**](https://patchwork.data-imaginist.com/) for preparing composite figures created using ggplot2;

-   [**DT**](https://rstudio.github.io/DT/) for interfacing with JavaScript library DataTables that create interactive tables on html pages;

-   [**ggiraph**](https://davidgohel.github.io/ggiraph/) for making ggplot graphics interactive;

-   [**plotlyr**](https://plotly.com/r/) for plotting interactive statistical graphs; and

-   [**crosstalk**](https://rstudio.github.io/crosstalk/) for inter-widget interactivity for html widgets.

The code chunk below uses the `p_load()` function in the **pacman** package to check if the packages are installed. If yes, they are then loaded into the R environment. If no, they are installed, then loaded into the R environment.

```{r}
pacman::p_load(tidyverse, patchwork,
               DT, ggiraph, plotly,
               crosstalk)
```

### 10.2.2 Importing Data

The dataset for this hands-on exercise is imported into the R environment using the `read_csv()` function in the **readr** package and stored as the R object, `exam_data`.

```{r}
exam_data = read_csv("data/Exam_data.csv")
```

The tibble data frame, `exam_data`, has 7 columns and 322 rows.

-   It consists of the year-end examination grades of a cohort of 322 Primary 3 students from a local school.

-   The 7 variables/attributes are:

    -   Categorical: ID, CLASS, GENDER, and RACE.

    -   Continuous: MATHS, ENGLISH, and SCIENCE.

## 10.3 ???

### 10.3.1 One-sample Test: gghistostats()

xxx

### 10.3.2 Unpacking the Bayes Factor

xxx

### 10.3.3 How to Interpret Bayes Factor

xxx

### 10.3.4 Two-sample Mean Test: ggbetweenstats()

xxx

### 10.3.5 One-way ANOVA Test: ggbetweenstats()

xxx

### 10.3.6 Significant Test of Correlation: ggscatterstats()

xxx

### 10.3.7 Significant Test of Association (Dependence): ggbarstats()

xxx

## 10.4 ???

xxx

### 10.4.1 Multiple Regression Model with lm()

xxx

### 10.4.2 Model Diagnostic: Checking for Multicollinearity

xxx

### 10.4.3 Model Diagnostic: Checking for Normality Assumption

xxx

### 10.4.4 Model Diagnostic: Checking for Homogeneity of Variances

xxx

### 10.4.5 Model Diagnostic: Complete Check

xxx

### 10.4.6 Visualising Regression Parameters: plot()

xxx

### 10.4.7 Visualising Regression Parameters: ggcoefstats()

xxx

[**\~\~\~ End of Hands-on Exercise 4B \~\~\~**]{.smallcaps}
