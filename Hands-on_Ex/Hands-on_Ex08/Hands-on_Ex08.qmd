---
title: "Hands-on Exercise 8"
date: "3 March 2024"
date-modified: "last-modified" #allows for updating to the latest date
format: html
execute: 
  echo: true #shows the code
  eval: true #shows the outcomes of the code
  warning: false #does not show the warnings
editor: visual
background-color: lightgrey;
font-family:  Palatino Linotype;
---

# 27 Modelling, Visualising and Analysing Network Data

## 27.1 Overview and Learning Outcomes

This hands-on exercise is based on [Chapter 9](https://r4va.netlify.app/chap09) of the **R for Visual Analytics** book.

Visualising distribution is not new in statistical analysis. [Chapter 1](https://r4va.netlify.app/chap01) covered some of the popular statistical graphic methods for visualising distribution. They are histogram, probability density curve (pdf), boxplot, notch plot, and violin plot, using the [**ggplot2**](https://ggplot2.tidyverse.org/) package. Chapter 9 will cover two relatively new statistical graphic methods for visualising distribution. They are ridgeline plot and raincloud plot using the **ggplot2** package and its extensions.

## 27.2 Getting Started

### 27.2.1 Installing and Loading Required Libraries

In this hands-on exercise, the following R packages are used:

-   [**tidyverse**](https://www.tidyverse.org/) (i.e. readr, tidyr, dplyr) for performing data science tasks such as importing, tidying, and wrangling data;

-   [**ggthemes**](https://ggplot2.tidyverse.org/reference/ggtheme.html) for extra themes, geoms, and scales for ggplot2;

-   [**ggridges**](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html) for creating ridgeline plots; and

-   [**ggdist**](https://mjskay.github.io/ggdist/) for visualising distributions and uncertainty.

The code chunk below uses the `p_load()` function in the **pacman** package to check if the packages are installed. If yes, they are then loaded into the R environment. If no, they are installed, then loaded into the R environment.

```{r}
#| eval: false
pacman::p_load(tidyverse, ggthemes,
               ggridges, ggdist)
```

### 27.2.2 Importing Data

The dataset for this hands-on exercise is imported into the R environment using the `read_csv()` function in the **readr** package and stored as the R object, `exam`.

```{r}
#| eval: false
exam = read_csv("data/Exam_data.csv")
```

The tibble data frame, `exam_data`, has 7 columns and 322 rows.

-   It consists of the year-end examination grades of a cohort of 322 Primary 3 students from a local school.

-   The 7 variables/attributes are:

    -   Categorical: ID, CLASS, GENDER, and RACE.

    -   Continuous: MATHS, ENGLISH, and SCIENCE.

### 27.2.3 Preparing Data

The dataset for this hands-on

## 27.3 Creating Network Objects Using tidygraph

xxx

### 27.3.1 Creating tbl_graph Object

xxx

### 27.3.2 dplyr Verbs in tidygraph

xxx

### 27.3.3 Using tbl_graph() to Build tidygraph Data Model

xxx

### 27.3.4 Reviewing Output Graph Object

xxx

### 27.3.5 Changing Active Object

xxx

## 27.4 Plotting Static Network Graphs: ggraph Package

xxx

### 27.4.1 Plotting Basic Network Graph

xxx

### 27.4.2 Changing Default Network Graph Theme

xxx

### 27.4.3 Changing Plot Colour

xxx

### 27.4.4 Working with ggraph Layouts

xxx

### 27.4.5 Modifying Network Nodes

xxx

### 27.4.6 Modifying Edges

xxx

## 27.5 Creating Facet Graphs

xxx

### 27.5.1 Working with facet_edges()

xxx

### 27.5.2 Framed Facet Graph

xxx

### 27.5.3 Working with facet_nodes()

xxx

## 27.6 Network Metrics Analysis

xxx

### 27.6.1 Computing Centrality Indices

xxx

### 27.6.2 Visualising Network Metrics

xxx

### 27.6.3 Visualising Community

xxx

## 27.7 Building Interactive Network Graph: visNetwork Package

xxx

### 27.7.1 Creating Basic Plot

xxx

### 27.7.2 Working with Layout

xxx

### 27.7.3 Working with Visual Attributes - Nodes

xxx

### 27.7.4 Working with Visual Attributes - Edges

xxx

### 27.7.5 Adding Interactivity

xxx

[**\~\~\~ End of Hands-on Exercise 8 \~\~\~**]{.smallcaps}
