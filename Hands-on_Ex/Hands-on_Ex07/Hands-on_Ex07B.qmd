---
title: "Hands-on Exercise 7B"
author: "Janet Toa"
date: "26 February 2024"
date-modified: "last-modified" #allows for updating to the latest date
format: html
execute: 
  echo: true #shows the code
  eval: true #shows the outcomes of the code
  warning: false #does not show the warnings
editor: visual
background-color: lightgrey;
font-family:  Palatino Linotype;
---

# 22 Visualising Geospatial Point Data

## 22.1 Overview and Learning Outcomes

This hands-on exercise is based on [Chapter 22](https://r4va.netlify.app/chap22) of the **R for Visual Analytics** book.

Proportional symbol maps (also known as graduate symbol maps) are a class of maps that use the visual variable of size to represent differences in the magnitude of a discrete, abruptly changing phenomenon, e.g. counts of people. Like choropleth maps, you can create classed or unclassed versions of these maps. The classed ones are known as range-graded or graduated symbols, and the unclassed are called proportional symbols, where the area of the symbols are proportional to the values of the attribute being mapped. In this hands-on exercise, you will learn how to create a proportional symbol map showing the number of wins by Singapore Pools’ outlets using an R package called **tmap**.

By the end of this hands-on exercise, you will acquire the following skills by using appropriate R packages:

-   To import an aspatial data file into R.

-   To convert it into simple point feature data frame and at the same time, to assign an appropriate projection reference to the newly create simple point feature data frame.

-   To plot interactive proportional symbol maps.

## 22.2 Getting Started

### 22.2.1 Installing and Loading Required Libraries

In this hands-on exercise, the following R packages are used:

-   [**tidyverse**](https://www.tidyverse.org/) (i.e. readr, tidyr, dplyr) for performing data science tasks such as importing, tidying, and wrangling data;

-   [**sf**](https://cran.r-project.org/web/packages/sf/) for handling geospatial data; and

-   [**tmap**](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html) for thematic mapping.

The code chunk below uses the `p_load()` function in the **pacman** package to check if the packages are installed. If yes, they are then loaded into the R environment. If no, they are installed, then loaded into the R environment.

```{r}
pacman::p_load(tidyverse, sf, tmap)
```

### 22.2.2 Importing and Preparing Data

The dataset for this hands-on exercise, `SGPools_svy21`, which is in the csv file format, is imported into the R environment using the `read_csv()` function in the **readr** package and stored as the R object, `sgpools`.

```{r}
sgpools = read_csv("data/aspatial/SGPools_svy21.csv")
```

The tibble data frame, `sgpools`, has 7 columns and 306 rows. The "XCOORD" and "YCOORD" variables are the x-coordinates and y-coordinates of Singapore Pools outlets/branches. They are in the [Singapore SVY21 Projected Coordinates System](https://www.sla.gov.sg/sirent/CoordinateSystems.aspx).

```{r}
list(sgpools) 
```

The `sgpools` data frame is then converted into a simple feature data frame using the `st_as_sf()` function in the **sf** package.

The "coords" argument requires the column name of the x-coordinates first followed by the column name of the y-coordinates.

The "crs" argument requires the coordinates system in epsg format. [EPSG: 3414](https://epsg.io/3414) is the Singapore SVY21 Projected Coordinate System.

Figure below shows the data table of *sgpools_sf*. Notice that

```{r}
sgpools_sf = st_as_sf(sgpools, 
                       coords = c("XCOORD", "YCOORD"),
                       crs= 3414)
```

A new column called geometry has been added into the sf data frame, `sgpools_sf`, which is a point feature class.

```{r}
list(sgpools_sf)
```

## 22.3 Drawing Proportional Symbol Map

The "view" mode is turned on via the tmap_mode() function to create an interactive proportional symbol map.

```{r}
tmap_mode("view")
```

### 22.3.1 Starting with Interactive Point Symbol Map

An interactive point symbol map is created below to show where the Singapore Pools outlets/branches are.

```{r}
tm_shape(sgpools_sf)+
tm_bubbles(col = "red",
           size = 1,
           border.col = "black",
           border.lwd = 1)
```

### 22.3.2 Making Map Proportional

A numerical variable is assigned to the "size" attribute to draw a proportional symbol map. The variable "Gp1Gp2Winnings" is assigned in the plot below.

```{r}
tm_shape(sgpools_sf)+
tm_bubbles(col = "red",
           size = "Gp1Gp2 Winnings",
           border.col = "black",
           border.lwd = 1)
```

### 22.3.3 Using Different Colours

The proportional symbol map can be further improved by using the "col" attribute. The "OUTLET_TYPE*"* variable is used as the colour attribute variable in the plot below.

```{r}
tm_shape(sgpools_sf)+
tm_bubbles(col = "OUTLET TYPE", 
          size = "Gp1Gp2 Winnings",
          border.col = "black",
          border.lwd = 1)
```

### 22.3.4 Plotting Facet Plots

An impressive and little-know feature of **tmap**’s view mode is that it also works with faceted plots. The "sync" argument the in `tm_facets()` function can be used to produce multiple maps with synchronised zoom and pan settings.

```{r}
tm_shape(sgpools_sf) +
  tm_bubbles(col = "OUTLET TYPE", 
          size = "Gp1Gp2 Winnings",
          border.col = "black",
          border.lwd = 1) +
  tm_facets(by= "OUTLET TYPE",
            nrow = 1,
            sync = TRUE)
```

Before ending the session, the `tmap_mode()` function is used to switch the mode back to "plot".

```{r}
tmap_mode("plot")
```

## 22.4 References

### **21.4.1 All About tmap Package**

-   [tmap: Thematic Maps in R](https://www.jstatsoft.org/article/view/v084i06)

-   [tmap](https://cran.r-project.org/web/packages/tmap/)

-   [tmap: get started!](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.html)

-   [tmap: changes in version 2.0](https://cran.r-project.org/web/packages/tmap/vignettes/tmap-changes-v2.html)

-   [tmap: creating thematic maps in a flexible way (useR!2015)](http://von-tijn.nl/tijn/research/presentations/tmap_user2015.pdf)

-   [Exploring and presenting maps with tmap (useR!2017)](http://von-tijn.nl/tijn/research/presentations/tmap_user2017.pdf)

### **21.4.2 Geospatial Data Wrangling**

-   [sf: Simple Features for R](https://cran.r-project.org/web/packages/sf/)

-   [Simple Features for R: StandardizedSupport for Spatial Vector Data](https://journal.r-project.org/archive/2018/RJ-2018-009/RJ-2018-009.pdf)

-   [Reading, Writing and Converting Simple Features](https://cran.r-project.org/web/packages/sf/vignettes/sf2.html)

### **21.4.3 General Data Wrangling**

-   [dplyr](https://dplyr.tidyverse.org/)

-   [Tidy data](https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html)

-   [tidyr: Easily Tidy Data with ‘spread()’ and ‘gather()’ Functions](https://cran.r-project.org/web/packages/tidyr/tidyr.pdf)

[**\~\~\~ End of Hands-on Exercise 7B \~\~\~**]{.smallcaps}
